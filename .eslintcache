[{"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\index.js":"1","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\App.js":"2","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\HomePage.js":"4","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\SignupPage.js":"5","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\PersonalPage.js":"6","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\ForecastPage.js":"7","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\LoginPage.js":"8","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\components\\dateForm.js":"9","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\Personalyear.js":"10","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\BirthdayCardPage.js":"11","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\LifePath.js":"12","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\PersonalDay.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":2605,"mtime":1624209816813,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":6021,"mtime":1612165739884,"results":"18","hashOfConfig":"15"},{"size":271,"mtime":1611218461333,"results":"19","hashOfConfig":"15"},{"size":277,"mtime":1611218503958,"results":"20","hashOfConfig":"15"},{"size":10724,"mtime":1612164376287,"results":"21","hashOfConfig":"15"},{"size":268,"mtime":1611218636044,"results":"22","hashOfConfig":"15"},{"size":3884,"mtime":1612165919460,"results":"23","hashOfConfig":"15"},{"size":12768,"mtime":1611820102754,"results":"24","hashOfConfig":"15"},{"size":9428,"mtime":1612134683807,"results":"25","hashOfConfig":"15"},{"size":11322,"mtime":1612032601212,"results":"26","hashOfConfig":"15"},{"size":6035,"mtime":1612124980780,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nck4k8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\index.js",[],["61","62"],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\App.js",["63","64","65","66"],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\HomePage.js",["67","68","69","70","71","72","73","74","75","76","77"],"import React from 'react';\r\nimport { Container, Image, Jumbotron, Row, Col } from 'react-bootstrap';\r\nimport DateForm from '../components/dateForm';\r\nimport './HomePagey.css';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        yearSum : 0,\r\n        fullDateSum: \"\",\r\n        monthSum: 0,\r\n        daySum: 0,\r\n        monthDaySum: \"\",\r\n        personalYearHeader:\"\",\r\n        lifePathHeader:\"\",\r\n      };\r\n\r\n    }\r\n  \r\n    \r\n    sumDateDigits = (year, month, day) => {\r\n        let monthValue = parseInt(month);\r\n        let dayValue = parseInt(day);\r\n        let monthDayValue = monthValue + dayValue;\r\n\r\n        // *** sum day + month digits *** //\r\n\r\n        let sumDM = 5; \r\n        let digit = 0;\r\n        while (monthDayValue) {\r\n        digit = monthDayValue % 10;\r\n        sumDM += digit;\r\n        monthDayValue = (monthDayValue - digit) / 10;\r\n        }\r\n        let newSumDM = sumDM;\r\n        if (newSumDM >= 10) {\r\n            newSumDM = newSumDM % 9;\r\n        }\r\n        \r\n        \r\n        // *** sum year digits *** //\r\n\r\n        let yearValue = parseInt(year);\r\n        let sumY = 0;\r\n        let digitY = 0;\r\n        while (yearValue) {\r\n            digitY = yearValue % 10;\r\n            sumY += digitY;\r\n            yearValue = (yearValue - digitY) / 10;\r\n        }\r\n        let newSumY = sumY;\r\n        if (newSumY >= 10) {\r\n            newSumY = newSumY % 9;\r\n        }\r\n\r\n        // *** sum full date digits *** //\r\n        let sumFull = newSumY + newSumDM - 5;\r\n        let sumDate = 0;\r\n        console.log(\"sumfull = \",sumFull);\r\n        let digitFull = 0;\r\n        while (sumFull) {\r\n            digitFull = sumFull % 10;\r\n            sumDate += digitFull;\r\n            sumFull = (sumFull - digitFull) / 10;\r\n        }\r\n\r\n        let newSumFull = sumDate;\r\n        if (newSumFull >= 10) {\r\n            newSumFull = newSumFull % 9;\r\n        }\r\n\r\n        //*** SET STATE ***//\r\n\r\n        this.setState({ \r\n        yearSum: newSumY,\r\n        monthDaySum: newSumDM,\r\n        personalYearHeader: \"Your Personal Year number is  \",\r\n        fullDateSum: newSumFull,\r\n        lifePathHeader: \"You Life path number is \"\r\n    });\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        //life path text 1-9\r\n         \r\n         let lifePathText = \"\";\r\n\r\n         if (this.state.fullDateSum == 1) {\r\n          lifePathText = this.props.lifePathData[0].lptext;\r\n         }\r\n          else if (this.state.fullDateSum == 2) {\r\n             lifePathText = this.props.lifePathData[1].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 3) {\r\n             lifePathText = this.props.lifePathData[2].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 4) {\r\n             lifePathText = this.props.lifePathData[3].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 5) {\r\n             lifePathText = this.props.lifePathData[4].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 6) {\r\n             lifePathText = this.props.lifePathData[5].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 7) {\r\n             lifePathText = this.props.lifePathData[6].lptext;\r\n          }\r\n          else if (this.state.fullDateSum == 8) {\r\n             lifePathText = this.props.lifePathData[7].lptext;\r\n          }\r\n \r\n          else if (this.state.fullDateSum == 9) {\r\n             lifePathText = this.props.lifePathData[8].lptext;\r\n          } \r\n         \r\n        \r\n\r\n    \r\n        return (\r\n            // className=\"c-home-page\"\r\n            <div>\r\n                <Container fluid className=\"c-home-page\">\r\n                <Row className=\"row-center\">\r\n                   <p className=\"p-home-first\">Have you heard of <span style={{color:\"#212529\"}}>Numerology?</span> Do you always see the same number throughout your life? Have you found yourself drawn to particular numbers? In simple terms, numerology is a study of numbers in your life. You can uncover information about the world and also each individual person by using Numerology. Numerology is seen as a universal language of numbers.</p>\r\n                    <Col xs={12} md={4}>\r\n                        <Image className =\"center\" src=\"https://i.pinimg.com/originals/95/c9/e7/95c9e744532f152301176be9f3d677ff.jpg\" />\r\n                    </Col>\r\n                    \r\n                    <Col xs={12} md={8}>\r\n                    \r\n                        <Jumbotron> \r\n                           <h2>FIND YOUR PERSONAL NUMBERS</h2> \r\n                           <h4>Enter your birth date and find your life path number and your Year forecast  numbers.</h4>\r\n                        \r\n                           <DateForm \r\n                            sumDateDigits={this.sumDateDigits} yearForcast={this.forecastText}/>\r\n\r\n                        </Jumbotron>\r\n\r\n                        \r\n   \r\n                    </Col>\r\n                </Row>\r\n                \r\n                </Container>\r\n                <div>\r\n                <Row className=\"yellow-col\">\r\n                     {/* <Col xs={12} md={6} className=\"yellow-col\"> */}\r\n                     <h5 className=\"h5-home\">{this.state.lifePathHeader} {this.state.fullDateSum}</h5>\r\n                    <p>{lifePathText}</p>\r\n                     {/* </Col> */}\r\n\r\n                     {/* <Col xs={12} md={6} className=\"yellow-col\">\r\n                     <h5>{this.state.personalYearHeader} {this.state.monthDaySum} </h5>\r\n                     <p>{forecastText}</p>\r\n                     </Col> */}\r\n\r\n                </Row>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage;\r\n\r\n\r\n{/* <h2><span style={{color:\"green\"}}>FIND </span>YOUR <span style={{color:\"#e74f4f\"}}>PERSONAL</span> <span style={{color:\"#358fdc\"}}>NUMBERS</span></h2>  */}\r\n{/* <h2><span style={{color:\"#dc354c\"}}>FIND </span>YOUR <span style={{color:\"#dc354c\"}}>P</span>ERSONAL <span style={{color:\"#dc354c\"}}>N</span>UMBERS</h2>  */}\r\n\r\n","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\SignupPage.js",["78"],"import React from 'react';\r\n\r\n\r\nclass SignupPage extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"c-signup-page\">Signup Page</div>\r\n        )\r\n    }\r\n}\r\nexport default SignupPage;","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\PersonalPage.js",["79"],"import React from 'react';\r\n\r\n\r\nclass PersonalPage extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"c-signup-page\">Personal Page</div>\r\n        )\r\n    }\r\n}\r\nexport default PersonalPage;","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\ForecastPage.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React from 'react';\r\nimport { Jumbotron, Tab, Tabs } from 'react-bootstrap';\r\nimport { Button, Col, Container, Form, Image, Modal, Row } from 'react-bootstrap';\r\nimport './ForecastPage.css'\r\n\r\nclass ForecastPage extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            yearSum : 0,\r\n            fullDateSum: \"\",\r\n            monthSum: 0,\r\n            daySum: 0,\r\n            dayForcastNum: \"\",\r\n            monthForcastNum :\"\",\r\n            monthDaySum: \"\",\r\n            personalYearHeader:\"\",\r\n            dailyForecastHeader:\"\",\r\n            monthlyForecastHeader:\"\",\r\n          };\r\n    \r\n        }\r\n        newDayInput = (event) => {\r\n            this.setState({ \r\n                dayValue: event.target.value});\r\n        }\r\n        \r\n        newMonthInput = (event) => {\r\n            this.setState({ \r\n                monthValue: event.target.value});\r\n        }\r\n    \r\n        newYearInput = (event) => {\r\n            this.setState({ \r\n                yearValue: event.target.value});\r\n        }\r\n\r\n        createForecast = (year, month, day) => {\r\n            let monthValue = parseInt(month);\r\n            let dayValue = parseInt(day);\r\n            let monthDayValue = monthValue + dayValue;\r\n    \r\n            // *** sum day + month digits *** //\r\n    \r\n            let sumDM = 5; \r\n            let digit = 0;\r\n            while (monthDayValue) {\r\n            digit = monthDayValue % 10;\r\n            sumDM += digit;\r\n            monthDayValue = (monthDayValue - digit) / 10;\r\n            }\r\n            let newSumDM = sumDM;\r\n            if (newSumDM >= 10) {\r\n                newSumDM = newSumDM % 9;\r\n            }\r\n            \r\n            \r\n            // *** sum year digits *** //\r\n    \r\n            let yearValue = parseInt(year);\r\n            let sumY = 0;\r\n            let digitY = 0;\r\n            while (yearValue) {\r\n                digitY = yearValue % 10;\r\n                sumY += digitY;\r\n                yearValue = (yearValue - digitY) / 10;\r\n            }\r\n            let newSumY = sumY;\r\n            if (newSumY >= 10) {\r\n                newSumY = newSumY % 9;\r\n            }\r\n    \r\n\r\n            // *** sum full date digits *** //\r\n            let sumFull = newSumY + newSumDM - 5;\r\n            let sumDate = 0;\r\n            console.log(\"sumfull = \",sumFull);\r\n            let digitFull = 0;\r\n            while (sumFull) {\r\n                digitFull = sumFull % 10;\r\n                sumDate += digitFull;\r\n                sumFull = (sumFull - digitFull) / 10;\r\n            }\r\n    \r\n            let newSumFull = sumDate;\r\n            if (newSumFull >= 10) {\r\n                newSumFull = newSumFull % 9;\r\n            }\r\n            \r\n            \r\n            let dayNum;\r\n            dayNum = Math.floor(Math.random() * 10) + 1;\r\n            \r\n\r\n            //*** SET STATE ***//\r\n    \r\n            this.setState({ \r\n            yearSum: newSumY,\r\n            monthDaySum: newSumDM,\r\n            dayForcastNum: dayNum,   // fix real\r\n            monthForcastNum : Math.floor(Math.random() * 10) + 1, // fix real\r\n            personalYearHeader: \"Your Personal Year number is  \",\r\n            fullDateSum: newSumFull,\r\n            dailyForecastHeader: \"Your Personal Day number is  \",\r\n            monthlyForecastHeader: \"Your Personal Month number is  \",\r\n            \r\n            });\r\n        \r\n        }\r\n    \r\n    render() {\r\n\r\n        const yearOptions = [];\r\n        for (let i = 2021; i > 1920; i--) {\r\n            const option = <option key = {i} value = {i} >{i}</option>\r\n            yearOptions.push(option)\r\n        }\r\n\r\n        const dayOptions = [];\r\n        for (let i = 1; i < 32; i++) {\r\n            const option = <option key = {i} value = {i}> {i}</option>\r\n            dayOptions.push(option)\r\n        }\r\n\r\n        let forecastText = \"\";\r\n\r\n        if (this.state.monthDaySum == 1) {\r\n         forecastText = this.props.yearForecastData[0].pytext;\r\n        }\r\n         else if (this.state.monthDaySum == 2) {\r\n            forecastText = this.props.yearForecastData[1].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 3) {\r\n            forecastText = this.props.yearForecastData[2].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 4) {\r\n            forecastText = this.props.yearForecastData[3].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 5) {\r\n            forecastText = this.props.yearForecastData[4].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 6) {\r\n            forecastText = this.props.yearForecastData[5].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 7) {\r\n            forecastText = this.props.yearForecastData[6].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 8) {\r\n            forecastText = this.props.yearForecastData[7].pytext;\r\n         }\r\n\r\n         else if (this.state.monthDaySum == 9) {\r\n            forecastText = this.props.yearForecastData[8].pytext;\r\n         } \r\n\r\n        // DAY FORECAST\r\n\r\n        let dayForcast = \"\";\r\n\r\n        if (this.state.dayForcastNum == 1) {\r\n         dayForcast = this.props.dayForecastData[0].pdtext;\r\n        }\r\n         else if (this.state.dayForcastNum == 2) {\r\n            dayForcast = this.props.dayForecastData[1].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 3) {\r\n            dayForcast = this.props.dayForecastData[2].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 4) {\r\n            dayForcast = this.props.dayForecastData[3].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 5) {\r\n            dayForcast = this.props.dayForecastData[4].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 6) {\r\n            dayForcast = this.props.dayForecastData[5].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 7) {\r\n            dayForcast = this.props.dayForecastData[6].pdtext;\r\n         }\r\n         else if (this.state.dayForcastNum == 8) {\r\n            dayForcast = this.props.dayForecastData[7].pdtext;\r\n         }\r\n\r\n         else if (this.state.dayForcastNum == 9) {\r\n            dayForcast = this.props.dayForecastData[8].pdtext;\r\n         } \r\n\r\n        return (\r\n                <div className=\"c-home-forecast-page\">\r\n                <Container>\r\n                <Row className=\"row-center\">\r\n                    \r\n                \r\n                <Col xs={12} md={8}>\r\n                \r\n                <Jumbotron> \r\n                <h3>Check your personal Numerology Forecasts:<br></br> Daily monthly and yearly </h3>\r\n                <Form>\r\n                    <h6 className=\"card-h6\">Enter your date of birth</h6>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\" type=\"date\">\r\n                        <Form.Label>Day</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                                      defaultValue={this.state.dayValue}\r\n                                      onChange={this.newDayInput}>\r\n                            {dayOptions}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                            defaultValue={this.state.monthValue}\r\n                            onChange={this.newMonthInput}>\r\n                            <option value=\"1\">January</option>\r\n                            <option value=\"2\">February</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">June</option>\r\n                            <option value=\"7\">July</option>\r\n                            <option value=\"8\">August</option>\r\n                            <option value=\"9\">September</option>\r\n                            <option value=\"1\">October</option>\r\n                            <option value=\"2\">November</option>\r\n                            <option value=\"3\">December</option>\r\n\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                            <Form.Label>Year</Form.Label>\r\n                            <Form.Control as=\"select\" \r\n                                defaultValue={this.state.yearValue}\r\n                                onChange={this.newYearInput}>\r\n                                {yearOptions}\r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n       \r\n                    <Button \r\n                        onClick= {() => this.createForecast(this.state.yearValue,this.state.monthValue,this.state.dayValue)}  \r\n                        variant=\"dark\" \r\n                        type=\"button\">\r\n                        Show My Forecast\r\n                    </Button>\r\n                    \r\n                    \r\n                    </Form>\r\n                    </Jumbotron>\r\n                    </Col>\r\n                    \r\n                    <Col xs={12} md={4}>\r\n                        <Image className =\"img-forecast\" src=\"https://i.pinimg.com/originals/95/c9/e7/95c9e744532f152301176be9f3d677ff.jpg\" />\r\n                    </Col>\r\n                    </Row>\r\n                \r\n                <Tabs defaultActiveKey=\"year\" id=\"uncontrolled-tab-example\">\r\n\r\n                        <Tab eventKey=\"year\" title=\"Yearly Numerology Forecasts\">\r\n                        <h5 className=\"tab-h5-header\">{this.state.personalYearHeader}  {this.state.monthDaySum} </h5>\r\n                        <p>{forecastText}</p>\r\n                           \r\n                        </Tab>\r\n                        <Tab eventKey=\"month\" title=\"Monthly Numerology Forecasts\">\r\n                        <h5 className=\"tab-h5-header\">{this.state.monthlyForecastHeader}  {this.state.monthForcastNum} </h5>\r\n                        <p>{forecastText}</p>\r\n                           \r\n                        </Tab>\r\n                       \r\n                        <Tab eventKey=\"day\" title=\"Daily Numerology Forecasts\">\r\n                        <h5 className=\"tab-h5-header\">{this.state.dailyForecastHeader}  {this.state.dayForcastNum} </h5>\r\n                        <p>{dayForcast}</p>\r\n                           \r\n                        </Tab>\r\n                </Tabs>\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ForecastPage;","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\LoginPage.js",["99"],"import React from 'react';\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"c-signup-page\">Login Page</div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\components\\dateForm.js",[],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\Personalyear.js",[],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\pages\\BirthdayCardPage.js",["100","101","102","103","104","105","106","107","108"],"import React from 'react';\r\nimport { Button, Col, Container, Form, Image, Modal, Row } from 'react-bootstrap';\r\nimport './BirthdayCardPage.css'\r\n\r\nclass BirthdayCardPage extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        dayValue: 1,\r\n        monthValue: 1,\r\n        monthDaySum: \"\",\r\n        cardHeaderText:\"\",\r\n        greetingText:\"\",\r\n        cardForecastHeader:\"\",\r\n        modalShow: false,\r\n    \r\n      };\r\n    \r\n    }\r\n\r\n    newDayInput = (event) => {\r\n        this.setState({ \r\n            dayValue: event.target.value});\r\n    }\r\n    \r\n    newMonthInput = (event) => {\r\n        this.setState({ \r\n            monthValue: event.target.value});\r\n    }\r\n\r\n    newYearInput = (event) => {\r\n        this.setState({ \r\n            yearValue: event.target.value});\r\n    }\r\n\r\n    newCardHeader = (event) => {\r\n        this.setState({ \r\n            cardHeaderText: event.target.value});\r\n    }\r\n\r\n    newGreetingText = (event) => {\r\n        this.setState({ \r\n            greetingText: event.target.value});\r\n    }\r\n\r\n    createCard = (month, day) => {\r\n        \r\n        let monthValue = parseInt(month);\r\n        let dayValue = parseInt(day);\r\n        let monthDayValue = monthValue + dayValue;\r\n\r\n        // day + month digits\r\n        let sumDM = 0;\r\n\r\n        \r\n        while (monthDayValue > 0) {\r\n            sumDM += monthDayValue % 10;\r\n            monthDayValue = Math.floor(monthDayValue / 10);\r\n        }\r\n\r\n        this.setState({ \r\n        \r\n        monthDaySum: sumDM,\r\n        headerText: \"Your Personal Year number is  \",\r\n        cardForecastHeader: \"YOUR NUMEROLOGY FORECAST FOR THE UPCOMING YEAR\",\r\n        modalShow: true,\r\n       \r\n    });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ modalShow: true });\r\n      };\r\n    \r\n    hideModal = () => {\r\n        this.setState({ modalShow: false });\r\n      };\r\n   \r\n    render() {\r\n\r\n        const yearOptions = [];\r\n        for (let i = 2021; i > 1920; i--) {\r\n            const option = <option key = {i} value = {i} >{i}</option>\r\n            yearOptions.push(option)\r\n        }\r\n\r\n        const dayOptions = [];\r\n        for (let i = 1; i < 32; i++) {\r\n            const option = <option key = {i} value = {i}> {i}</option>\r\n            dayOptions.push(option)\r\n        }\r\n\r\n        let forecastText = \"\";\r\n\r\n        if (this.state.monthDaySum == 1) {\r\n         forecastText = this.props.yearForecastData[0].pytext;\r\n        }\r\n         else if (this.state.monthDaySum == 2) {\r\n            forecastText = this.props.yearForecastData[1].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 3) {\r\n            forecastText = this.props.yearForecastData[2].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 4) {\r\n            forecastText = this.props.yearForecastData[3].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 5) {\r\n            forecastText = this.props.yearForecastData[4].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 6) {\r\n            forecastText = this.props.yearForecastData[5].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 7) {\r\n            forecastText = this.props.yearForecastData[6].pytext;\r\n         }\r\n         else if (this.state.monthDaySum == 8) {\r\n            forecastText = this.props.yearForecastData[7].pytext;\r\n         }\r\n\r\n         else if (this.state.monthDaySum == 9) {\r\n            forecastText = this.props.yearForecastData[8].pytext;\r\n         } \r\n        \r\n\r\n        return (\r\n                <div className=\"c-home-forecast-page\">\r\n                <Container>\r\n                        <Row>\r\n                <Col xs={12} md={8} className=\"yellow-col-card\">\r\n                <h5 className=\"card-page-header\">CREATE PERSONALIZED BIRTHDAY CARDS</h5>\r\n                <p>Create personalized birthday cards for your friend or loved one with a personalized yearly numerology forecast Your friends, family or loved one will cherish this unique birthday cards. add personalized greeting text and enter the person birth date to get the yearly birthday forecast.  </p>\r\n                <Form>\r\n                    <h6 className=\"card-h6\">Enter person date of birth</h6>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\" type=\"date\">\r\n                        <Form.Label>Day</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                                      defaultValue={this.state.dayValue}\r\n                                      onChange={this.newDayInput}>\r\n                            {dayOptions}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Control as=\"select\" \r\n                            defaultValue={this.state.monthValue}\r\n                            onChange={this.newMonthInput}>\r\n                            <option value=\"1\">January</option>\r\n                            <option value=\"2\">February</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">June</option>\r\n                            <option value=\"7\">July</option>\r\n                            <option value=\"8\">August</option>\r\n                            <option value=\"9\">September</option>\r\n                            <option value=\"1\">October</option>\r\n                            <option value=\"2\">November</option>\r\n                            <option value=\"3\">December</option>\r\n\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                            <Form.Label>Year</Form.Label>\r\n                            <Form.Control as=\"select\" \r\n                                defaultValue={this.state.yearValue}\r\n                                onChange={this.newYearInput}>\r\n                                {yearOptions}\r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n            \r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Add card header text</Form.Label>\r\n                                <Form.Control type = \"text\"\r\n                                        defaultValue={this.state.cardHeaderText}\r\n                                        onChange={this.newCardHeader} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Add personal Birthday text</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={4}  \r\n                                        defaultValue={this.state.greetingText}\r\n                                        onChange={this.newGreetingText} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                    <Button \r\n                        onClick= {() => this.createCard(this.state.monthValue,this.state.dayValue)}  \r\n                        variant=\"dark\" \r\n                        type=\"button\">\r\n                        Creat Card\r\n                    </Button>\r\n                    \r\n                    \r\n                    </Form>\r\n\r\n                    </Col>   \r\n                    <Col xs={12} md={4}>\r\n                        <Image className =\"img-card\" src=\"https://i.pinimg.com/originals/95/c9/e7/95c9e744532f152301176be9f3d677ff.jpg\" />\r\n                    </Col>\r\n                    </Row>\r\n                    <Modal className=\"my-modal\" show={this.state.modalShow} \r\n                            onHide={this.hideModal}\r\n                            >\r\n                    {/* dialogClassName=\"modal-200w\" */}\r\n                    {/* <div className =\"bd-card\"> */}\r\n                        \r\n                        <Image className =\"bg-card\" src=\"https://www.home-assistant.io/images/lovelace/header-footer/balloons-header.png\" /> \r\n                        <Modal.Header closeButton>\r\n\r\n                            <Modal.Title>{this.state.cardHeaderText} &#127880;</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p className=\"italic-p\">{this.state.greetingText}</p>\r\n                            <h5>{this.state.cardForecastHeader}</h5>\r\n                            <h5> YEAR NUMBER {this.state.monthDaySum}</h5>\r\n                            <p> {forecastText}</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.hideModal}>\r\n                                Close\r\n                            </Button>\r\n         \r\n                        </Modal.Footer>\r\n                         {/* </div> */}\r\n                    </Modal>\r\n                    </Container>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default BirthdayCardPage;","C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\LifePath.js",[],"C:\\Users\\USER\\Documents\\WEB-2020\\Final-Project\\Numerology-App\\my-app\\src\\data\\PersonalDay.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":20},{"ruleId":"113","severity":1,"message":"117","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":41,"column":9,"nodeType":"121","endLine":47,"endColumn":9},{"ruleId":"122","severity":1,"message":"123","line":91,"column":37,"nodeType":"124","messageId":"125","endLine":91,"endColumn":39},{"ruleId":"122","severity":1,"message":"123","line":94,"column":43,"nodeType":"124","messageId":"125","endLine":94,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":97,"column":43,"nodeType":"124","messageId":"125","endLine":97,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":100,"column":43,"nodeType":"124","messageId":"125","endLine":100,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":103,"column":43,"nodeType":"124","messageId":"125","endLine":103,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":106,"column":43,"nodeType":"124","messageId":"125","endLine":106,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":109,"column":43,"nodeType":"124","messageId":"125","endLine":109,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":112,"column":43,"nodeType":"124","messageId":"125","endLine":112,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":116,"column":43,"nodeType":"124","messageId":"125","endLine":116,"endColumn":45},{"ruleId":"126","severity":1,"message":"127","line":172,"column":1,"nodeType":"128","messageId":"129","endLine":172,"endColumn":160},{"ruleId":"126","severity":1,"message":"127","line":173,"column":1,"nodeType":"128","messageId":"129","endLine":173,"endColumn":162},{"ruleId":"130","severity":1,"message":"131","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":7,"endColumn":6},{"ruleId":"130","severity":1,"message":"131","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":7,"endColumn":6},{"ruleId":"113","severity":1,"message":"134","line":3,"column":47,"nodeType":"115","messageId":"116","endLine":3,"endColumn":52},{"ruleId":"122","severity":1,"message":"123","line":128,"column":36,"nodeType":"124","messageId":"125","endLine":128,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":131,"column":42,"nodeType":"124","messageId":"125","endLine":131,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":134,"column":42,"nodeType":"124","messageId":"125","endLine":134,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":137,"column":42,"nodeType":"124","messageId":"125","endLine":137,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":140,"column":42,"nodeType":"124","messageId":"125","endLine":140,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":143,"column":42,"nodeType":"124","messageId":"125","endLine":143,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":146,"column":42,"nodeType":"124","messageId":"125","endLine":146,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":149,"column":42,"nodeType":"124","messageId":"125","endLine":149,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":153,"column":42,"nodeType":"124","messageId":"125","endLine":153,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":161,"column":38,"nodeType":"124","messageId":"125","endLine":161,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":164,"column":44,"nodeType":"124","messageId":"125","endLine":164,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":167,"column":44,"nodeType":"124","messageId":"125","endLine":167,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":170,"column":44,"nodeType":"124","messageId":"125","endLine":170,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":173,"column":44,"nodeType":"124","messageId":"125","endLine":173,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":176,"column":44,"nodeType":"124","messageId":"125","endLine":176,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":179,"column":44,"nodeType":"124","messageId":"125","endLine":179,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":182,"column":44,"nodeType":"124","messageId":"125","endLine":182,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":186,"column":44,"nodeType":"124","messageId":"125","endLine":186,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":7,"endColumn":6},{"ruleId":"122","severity":1,"message":"123","line":95,"column":36,"nodeType":"124","messageId":"125","endLine":95,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":98,"column":42,"nodeType":"124","messageId":"125","endLine":98,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":101,"column":42,"nodeType":"124","messageId":"125","endLine":101,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":104,"column":42,"nodeType":"124","messageId":"125","endLine":104,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":107,"column":42,"nodeType":"124","messageId":"125","endLine":107,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":110,"column":42,"nodeType":"124","messageId":"125","endLine":110,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":113,"column":42,"nodeType":"124","messageId":"125","endLine":113,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":116,"column":42,"nodeType":"124","messageId":"125","endLine":116,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":120,"column":42,"nodeType":"124","messageId":"125","endLine":120,"endColumn":44},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'PersonalPage' is defined but never used.","Identifier","unusedVar","'SignupPage' is defined but never used.","'LoginPage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]